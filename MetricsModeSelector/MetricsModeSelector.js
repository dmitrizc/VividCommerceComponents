import React from 'react';
import PropTypes from 'prop-types';

import './MetricsModeSelector.scss';

export const METRICS_MODE = {
  TEXT: 'text',
  CHART: 'chart',
};

const ChartIcon = ({ ...props }) => (
  <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
    <path
      className="fill-svg"
      fillRule="evenodd"
      clipRule="evenodd"
      d="M12.9231 12.6875C12.9231 12.9294 12.6824 13.125 12.3846 13.125C12.0868 13.125 11.8462 12.9294 11.8462 12.6875V8.3125C11.8462 8.071 12.0868 7.875 12.3846 7.875C12.6824 7.875 12.9231 8.071 12.9231 8.3125V12.6875ZM12.9231 7H11.8462C11.2517 7 10.7692 7.392 10.7692 7.875V13.125C10.7692 13.608 11.2517 14 11.8462 14H12.9231C13.5175 14 14 13.608 14 13.125V7.875C14 7.392 13.5175 7 12.9231 7ZM2.15385 12.6875C2.15385 12.9294 1.91315 13.125 1.61538 13.125C1.31762 13.125 1.07692 12.9294 1.07692 12.6875V5.25C1.07692 5.0085 1.31762 4.8125 1.61538 4.8125C1.91315 4.8125 2.15385 5.0085 2.15385 5.25V12.6875ZM2.15385 3.9375H1.07692C0.482462 3.9375 0 4.3295 0 4.8125V13.125C0 13.608 0.482462 14 1.07692 14H2.15385C2.74831 14 3.23077 13.608 3.23077 13.125V4.8125C3.23077 4.3295 2.74831 3.9375 2.15385 3.9375ZM7.53846 12.6875C7.53846 12.9294 7.29777 13.125 7 13.125C6.70223 13.125 6.46154 12.9294 6.46154 12.6875V1.3125C6.46154 1.07056 6.70223 0.875 7 0.875C7.29777 0.875 7.53846 1.07056 7.53846 1.3125V12.6875ZM7.53846 0H6.46154C5.86708 0 5.38462 0.392 5.38462 0.875V13.125C5.38462 13.608 5.86708 14 6.46154 14H7.53846C8.13292 14 8.61539 13.608 8.61539 13.125V0.875C8.61539 0.392 8.13292 0 7.53846 0Z"
    />
  </svg>
);

const TextIcon = ({ ...props }) => (
  <svg width="14" height="10" viewBox="0 0 14 10" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
    <path
      className="fill-svg"
      fillRule="evenodd"
      clipRule="evenodd"
      d="M10.6268 7.67154C10.6268 8.33558 10.8526 8.66759 11.3042 8.66759C11.375 8.66759 11.4812 8.65652 11.6229 8.63439C11.7646 8.61225 11.8708 8.60119 11.9416 8.60119C12.0567 8.60119 12.1563 8.64324 12.2404 8.72735C12.3246 8.81146 12.3666 8.91107 12.3666 9.02617C12.3666 9.33605 12.1674 9.49099 11.769 9.49099H11.6893C11.645 9.48213 11.614 9.47771 11.5963 9.47771L10.9456 9.38474C10.6977 9.34933 10.4188 9.33162 10.1089 9.33162C9.77246 9.33162 9.47586 9.34933 9.2191 9.38474L8.55507 9.47771C8.52851 9.47771 8.49752 9.48213 8.4621 9.49099H8.36914C7.97957 9.49099 7.78479 9.33605 7.78479 9.02617C7.78479 8.74284 7.92645 8.60119 8.20977 8.60119C8.2806 8.60119 8.38685 8.61225 8.52851 8.63439C8.67017 8.65652 8.77641 8.66759 8.84724 8.66759C9.28993 8.66759 9.51127 8.33558 9.51127 7.67154V6.7419L9.52455 5.5732V4.44435L9.51127 2.2796C9.51127 1.65099 9.18811 1.33668 8.54179 1.33668H8.13009C7.49261 1.33668 7.17388 1.64656 7.17388 2.26632C7.17388 2.48767 7.17831 2.63818 7.18716 2.71787L7.24028 3.20925C7.24914 3.28893 7.25357 3.3996 7.25357 3.54126C7.25357 4.09905 7.08092 4.37794 6.73562 4.37794C6.40803 4.37794 6.24424 4.17431 6.24424 3.76704C6.24424 3.65194 6.25309 3.45273 6.2708 3.16941C6.29736 2.74442 6.31064 2.47439 6.31064 2.35929C6.31064 2.13794 6.30179 1.90775 6.28408 1.6687C6.24866 1.19944 6.23096 1.00024 6.23096 1.07107C6.23096 0.699208 6.39918 0.513281 6.73562 0.513281C6.85957 0.513281 7.14732 0.526561 7.59886 0.553123C7.64313 0.553123 8.00613 0.561976 8.68787 0.579684L10.2019 0.606245C10.3789 0.606245 10.8526 0.597391 11.6229 0.579684C11.7911 0.579684 12.0789 0.566403 12.4861 0.539842C12.8491 0.51328 13.1325 0.5 13.3361 0.5C13.7788 0.5 14.0001 0.6815 14.0001 1.04451V1.07107C14.0001 1.15961 13.9891 1.3234 13.9669 1.56245C13.9448 1.8015 13.9204 2.05826 13.8939 2.33273V2.47881C13.8939 2.61162 13.9072 2.81968 13.9337 3.103C13.9691 3.47486 13.9868 3.70506 13.9868 3.7936C13.9868 4.1566 13.8142 4.3381 13.4689 4.3381C13.1325 4.3381 12.9642 4.11676 12.9642 3.67407C12.9642 3.5147 12.9775 3.27787 13.0041 2.96356C13.0306 2.64925 13.0439 2.41241 13.0439 2.25304C13.0439 1.64213 12.6942 1.33668 11.9948 1.33668H11.6229C11.2953 1.33668 11.0607 1.4053 10.919 1.54253C10.7774 1.67976 10.6977 1.90775 10.68 2.22648L10.6401 3.15613L10.6268 7.67154Z"
    />
    <path
      className="fill-svg"
      fillRule="evenodd"
      clipRule="evenodd"
      d="M2.56427 8.40215C2.56427 8.7895 2.69597 8.98318 2.95937 8.98318C3.00068 8.98318 3.06266 8.97672 3.1453 8.96381C3.22793 8.9509 3.28991 8.94444 3.33123 8.94444C3.39837 8.94444 3.45647 8.96897 3.50553 9.01804C3.5546 9.0671 3.57913 9.12521 3.57913 9.19235C3.57913 9.37311 3.46293 9.46349 3.23051 9.46349H3.18403C3.15821 9.45833 3.14013 9.45575 3.1298 9.45575L2.7502 9.40152C2.60559 9.38086 2.4429 9.37053 2.26213 9.37053C2.06588 9.37053 1.89286 9.38086 1.74308 9.40152L1.35573 9.45575C1.34024 9.45575 1.32216 9.45833 1.3015 9.46349H1.24727C1.02003 9.46349 0.906403 9.37311 0.906403 9.19235C0.906403 9.02708 0.989037 8.94444 1.15431 8.94444C1.19563 8.94444 1.2576 8.9509 1.34024 8.96381C1.42287 8.97672 1.48485 8.98318 1.52617 8.98318C1.7844 8.98318 1.91352 8.7895 1.91352 8.40215V7.85986L1.92126 7.17812V6.51962L1.91352 5.25685C1.91352 4.89016 1.72501 4.70681 1.34798 4.70681H1.10783C0.735967 4.70681 0.55004 4.88758 0.55004 5.24911C0.55004 5.37822 0.552622 5.46602 0.557787 5.5125L0.588775 5.79914C0.593939 5.84563 0.596522 5.91019 0.596522 5.99282C0.596522 6.3182 0.495811 6.48088 0.294387 6.48088C0.103293 6.48088 0.00774703 6.3621 0.00774703 6.12452C0.00774703 6.05738 0.0129117 5.94117 0.0232411 5.7759C0.0387352 5.528 0.0464822 5.37048 0.0464822 5.30333C0.0464822 5.17422 0.0413176 5.03994 0.0309881 4.90049C0.0103293 4.62676 0 4.51055 0 4.55187C0 4.33495 0.0981281 4.2265 0.294387 4.2265C0.366693 4.2265 0.534544 4.23424 0.797945 4.24974C0.823768 4.24974 1.03552 4.2549 1.4332 4.26523L2.31636 4.28073C2.41966 4.28073 2.69597 4.27556 3.1453 4.26523C3.24343 4.26523 3.41128 4.25749 3.64885 4.24199C3.86061 4.2265 4.02588 4.21875 4.14466 4.21875C4.4029 4.21875 4.53202 4.32462 4.53202 4.53638V4.55187C4.53202 4.60352 4.52556 4.69907 4.51265 4.83851C4.49974 4.97796 4.48553 5.12773 4.47004 5.28784V5.37306C4.47004 5.45053 4.47779 5.5719 4.49328 5.73717C4.51394 5.95409 4.52427 6.08837 4.52427 6.14001C4.52427 6.35177 4.42356 6.45764 4.22213 6.45764C4.02588 6.45764 3.92775 6.32853 3.92775 6.07029C3.92775 5.97733 3.93549 5.83917 3.95099 5.65582C3.96648 5.47248 3.97423 5.33432 3.97423 5.24136C3.97423 4.88499 3.77023 4.70681 3.36221 4.70681H3.1453C2.9542 4.70681 2.81734 4.74684 2.7347 4.82689C2.65207 4.90695 2.60559 5.03993 2.59526 5.22586L2.57202 5.76816L2.56427 8.40215Z"
    />
  </svg>
);

const MetricsModeSelector = ({ value, onChange, className = '', ...props }) => {
  return (
    <div className={`metrics-mode-selector ${className}`} {...props}>
      <button
        className={`metrics-mode-btn ${value === METRICS_MODE.TEXT ? 'active' : ''}`}
        onClick={e => {
          e.preventDefault();
          onChange(METRICS_MODE.TEXT);
        }}
      >
        <TextIcon className="metrics-mode-btn__icon" />
        <span className="metrics-mode-btn__text">Text</span>
      </button>
      <button
        className={`metrics-mode-btn ${value === METRICS_MODE.CHART ? 'active' : ''}`}
        onClick={e => {
          e.preventDefault();
          onChange(METRICS_MODE.CHART);
        }}
      >
        <ChartIcon className="metrics-mode-btn__icon" />
        <span className="metrics-mode-btn__text">Charts</span>
      </button>
    </div>
  );
};

MetricsModeSelector.propTypes = {
  value: PropTypes.string.isRequired,
  onChange: PropTypes.func,
};

export default MetricsModeSelector;
